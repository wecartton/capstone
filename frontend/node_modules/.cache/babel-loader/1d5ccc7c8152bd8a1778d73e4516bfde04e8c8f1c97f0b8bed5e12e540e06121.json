{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tasya Wulandari\\\\Downloads\\\\capstone-ellc.v1\\\\capstone-ellc.v1\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { authService } from '../services/api.service';\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  // Initialize auth state on app load\n  useEffect(() => {\n    const initAuth = async () => {\n      const storedUser = localStorage.getItem('user');\n      const token = localStorage.getItem('accessToken');\n      if (storedUser && token) {\n        try {\n          // Validate the token\n          const response = await authService.validateToken();\n          if (response.data.valid) {\n            setUser(JSON.parse(storedUser));\n          } else {\n            // Token is invalid\n            handleLogout();\n          }\n        } catch (error) {\n          console.error('Auth initialization error:', error);\n          handleLogout();\n        }\n      }\n      setLoading(false);\n    };\n    initAuth();\n  }, []);\n\n  // Login the user\n  const login = async credentials => {\n    try {\n      const response = await authService.login(credentials);\n      const {\n        user,\n        access_token,\n        refresh_token\n      } = response.data;\n\n      // Store tokens and user data\n      localStorage.setItem('accessToken', access_token);\n      localStorage.setItem('refreshToken', refresh_token);\n      localStorage.setItem('user', JSON.stringify(user));\n      setUser(user);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed'\n      };\n    }\n  };\n\n  // Register a new user\n  const register = async userData => {\n    try {\n      const response = await authService.register(userData);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      return {\n        success: false,\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration failed'\n      };\n    }\n  };\n\n  // Logout the user\n  const handleLogout = async () => {\n    try {\n      if (user) {\n        await authService.logout();\n      }\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      // Clear stored data\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('refreshToken');\n      localStorage.removeItem('user');\n      setUser(null);\n      navigate('/login');\n    }\n  };\n\n  // Forgot password\n  const forgotPassword = async email => {\n    try {\n      await authService.forgotPassword(email);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      return {\n        success: false,\n        message: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Failed to send reset email'\n      };\n    }\n  };\n\n  // Reset password\n  const resetPassword = async (token, password) => {\n    try {\n      await authService.resetPassword(token, password);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      return {\n        success: false,\n        message: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'Password reset failed'\n      };\n    }\n  };\n\n  // Context value\n  const value = {\n    user,\n    isAuthenticated: !!user,\n    loading,\n    login,\n    register,\n    logout: handleLogout,\n    forgotPassword,\n    resetPassword\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the auth context\n_s(AuthProvider, \"lk6viekuCMMpYORkLYLEq0Wsfds=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","useNavigate","authService","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","navigate","initAuth","storedUser","localStorage","getItem","token","response","validateToken","data","valid","JSON","parse","handleLogout","error","console","login","credentials","access_token","refresh_token","setItem","stringify","success","_error$response","_error$response$data","message","register","userData","_error$response2","_error$response2$data","logout","removeItem","forgotPassword","email","_error$response3","_error$response3$data","resetPassword","password","_error$response4","_error$response4$data","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Tasya Wulandari/Downloads/capstone-ellc.v1/capstone-ellc.v1/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { authService } from '../services/api.service';\r\n\r\n// Create context\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  // Initialize auth state on app load\r\n  useEffect(() => {\r\n    const initAuth = async () => {\r\n      const storedUser = localStorage.getItem('user');\r\n      const token = localStorage.getItem('accessToken');\r\n\r\n      if (storedUser && token) {\r\n        try {\r\n          // Validate the token\r\n          const response = await authService.validateToken();\r\n          if (response.data.valid) {\r\n            setUser(JSON.parse(storedUser));\r\n          } else {\r\n            // Token is invalid\r\n            handleLogout();\r\n          }\r\n        } catch (error) {\r\n          console.error('Auth initialization error:', error);\r\n          handleLogout();\r\n        }\r\n      }\r\n      \r\n      setLoading(false);\r\n    };\r\n\r\n    initAuth();\r\n  }, []);\r\n\r\n  // Login the user\r\n  const login = async (credentials) => {\r\n    try {\r\n      const response = await authService.login(credentials);\r\n      const { user, access_token, refresh_token } = response.data;\r\n      \r\n      // Store tokens and user data\r\n      localStorage.setItem('accessToken', access_token);\r\n      localStorage.setItem('refreshToken', refresh_token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      \r\n      setUser(user);\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        message: error.response?.data?.error || 'Login failed' \r\n      };\r\n    }\r\n  };\r\n\r\n  // Register a new user\r\n  const register = async (userData) => {\r\n    try {\r\n      const response = await authService.register(userData);\r\n      return { success: true, data: response.data };\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        message: error.response?.data?.error || 'Registration failed' \r\n      };\r\n    }\r\n  };\r\n\r\n  // Logout the user\r\n  const handleLogout = async () => {\r\n    try {\r\n      if (user) {\r\n        await authService.logout();\r\n      }\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n    } finally {\r\n      // Clear stored data\r\n      localStorage.removeItem('accessToken');\r\n      localStorage.removeItem('refreshToken');\r\n      localStorage.removeItem('user');\r\n      setUser(null);\r\n      navigate('/login');\r\n    }\r\n  };\r\n\r\n  // Forgot password\r\n  const forgotPassword = async (email) => {\r\n    try {\r\n      await authService.forgotPassword(email);\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        message: error.response?.data?.error || 'Failed to send reset email' \r\n      };\r\n    }\r\n  };\r\n\r\n  // Reset password\r\n  const resetPassword = async (token, password) => {\r\n    try {\r\n      await authService.resetPassword(token, password);\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        message: error.response?.data?.error || 'Password reset failed' \r\n      };\r\n    }\r\n  };\r\n\r\n  // Context value\r\n  const value = {\r\n    user,\r\n    isAuthenticated: !!user,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout: handleLogout,\r\n    forgotPassword,\r\n    resetPassword\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use the auth context\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}