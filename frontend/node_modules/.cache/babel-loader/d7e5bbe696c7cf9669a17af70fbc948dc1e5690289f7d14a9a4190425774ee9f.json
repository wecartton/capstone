{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tasya Wulandari\\\\Downloads\\\\ALL RESOURCES\\\\capstone-ellc.v1\\\\frontend\\\\src\\\\components\\\\AgentChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport '../styles/AgentChat.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AgentChat = () => {\n  _s();\n  // States\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [showGif, setShowGif] = useState(false);\n  const [aiResponse, setAiResponse] = useState('');\n  const [grammarCorrection, setGrammarCorrection] = useState(null);\n\n  // Voice recognition states\n  const [transcript, setTranscript] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const recognition = useRef(null);\n\n  // WebSocket reference\n  const ws = useRef(null);\n\n  // Setup SpeechRecognition\n  useEffect(() => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      alert('Browser kamu tidak mendukung Speech Recognition!');\n      return;\n    }\n    recognition.current = new SpeechRecognition();\n    recognition.current.continuous = true;\n    recognition.current.interimResults = true;\n    recognition.current.lang = 'en-US';\n    recognition.current.onresult = event => {\n      let interimTranscript = '';\n      let finalTranscript = '';\n      for (let i = event.resultIndex; i < event.results.length; i++) {\n        const textChunk = event.results[i][0].transcript;\n        if (event.results[i].isFinal) {\n          finalTranscript += textChunk;\n        } else {\n          interimTranscript += textChunk;\n        }\n      }\n      setTranscript(finalTranscript + interimTranscript);\n    };\n    recognition.current.onerror = event => {\n      console.error('Speech recognition error:', event.error);\n      setIsListening(false);\n    };\n    recognition.current.onend = () => {\n      setIsListening(false);\n    };\n  }, []);\n\n  // Setup WebSocket connection\n  useEffect(() => {\n    ws.current = new WebSocket('ws://localhost:8090');\n    ws.current.onopen = () => {\n      console.log('WebSocket connected');\n    };\n    ws.current.onmessage = event => {\n      try {\n        const data = JSON.parse(event.data); // coba parse sebagai JSON\n\n        if (data.type === 'grammar_correction') {\n          setGrammarCorrection(data.text);\n        } else {\n          // fallback untuk text biasa dari AI\n          setAiResponse(prev => prev + (data.text || ''));\n        }\n      } catch (e) {\n        // fallback untuk non-JSON (AI response string langsung dari stream)\n        if (event.data === '[END]') {\n          setShowGif(false);\n        } else {\n          setAiResponse(prev => prev + event.data);\n        }\n      }\n    };\n    ws.current.onerror = error => {\n      console.error('WebSocket error:', error);\n      setShowGif(false);\n    };\n    ws.current.onclose = () => {\n      console.log('WebSocket disconnected');\n    };\n\n    // Cleanup on unmount\n    return () => {\n      ws.current.close();\n    };\n  }, []);\n\n  // Send message to backend and update UI\n  const sendMessage = message => {\n    if (!message.trim()) return;\n\n    // Save user message in chat history\n    setMessages(prev => [...prev, {\n      text: message.trim(),\n      isUser: true\n    }]);\n    setGrammarCorrection(null); // Reset grammar correction setiap kirim pesan baru\n    setAiResponse(''); // Reset AI response\n    setShowGif(true); // Show loading GIF\n\n    if (ws.current.readyState === WebSocket.OPEN) {\n      ws.current.send(message.trim());\n    } else {\n      console.error('WebSocket belum connected');\n      setShowGif(false);\n      setAiResponse('Error: Unable to connect to the server.');\n    }\n  };\n\n  // Toggle voice recognition & send transcript when stopped\n  const toggleListening = () => {\n    if (isListening) {\n      recognition.current.stop();\n      setIsListening(false);\n      if (transcript.trim()) {\n        sendMessage(transcript);\n      }\n    } else {\n      setTranscript('');\n      recognition.current.start();\n      setIsListening(true);\n    }\n  };\n\n  // Handle input text send\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (input.trim() === '') return;\n    sendMessage(input);\n    setInput('');\n  };\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"agent-chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: '15px'\n      },\n      children: showGif ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/voice_chatbot_talking_sharpened_fixed.gif\",\n          alt: \"Chatbot Talking\",\n          className: \"chatbot-gif\",\n          style: {\n            width: '500px',\n            height: '300px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '8px'\n          },\n          children: [grammarCorrection && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grammar-correction\",\n            style: {\n              color: 'orange',\n              fontStyle: 'italic'\n            },\n            children: [\"Grammar correction: \", grammarCorrection]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"chat-response-text\",\n            style: {\n              margin: 0\n            },\n            children: aiResponse\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/assistant_idle.png\",\n          alt: \"AI Agent Idle\",\n          className: \"chatbot-gif\",\n          style: {\n            width: '500px',\n            height: '300px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), aiResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '10px'\n          },\n          children: [grammarCorrection && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grammar-correction\",\n            style: {\n              color: 'orange',\n              fontStyle: 'italic'\n            },\n            children: [\"Grammar correction: \", grammarCorrection]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"chat-response-text\",\n            style: {\n              margin: 0\n            },\n            children: aiResponse\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-area\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: handleInputChange,\n          placeholder: \"Type your message here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"voice-recognition-section\",\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          whiteSpace: 'pre-wrap'\n        },\n        children: transcript || \"This section and text will be shown result of user voice recognition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleListening,\n        className: \"voice-button\",\n        children: isListening ? 'Stop Recording' : 'Start Recording'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-history\",\n      style: {\n        marginTop: '30px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Chat History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), messages.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No messages yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            fontWeight: msg.isUser ? 'bold' : 'normal'\n          },\n          children: [msg.isUser ? \"User:\" : \"AI:\", \" \", msg.text]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s(AgentChat, \"6T/i8Gku02WoKEVpVdGciU6nXek=\");\n_c = AgentChat;\nexport default AgentChat;\nvar _c;\n$RefreshReg$(_c, \"AgentChat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","AgentChat","_s","input","setInput","messages","setMessages","showGif","setShowGif","aiResponse","setAiResponse","grammarCorrection","setGrammarCorrection","transcript","setTranscript","isListening","setIsListening","recognition","ws","SpeechRecognition","window","webkitSpeechRecognition","alert","current","continuous","interimResults","lang","onresult","event","interimTranscript","finalTranscript","i","resultIndex","results","length","textChunk","isFinal","onerror","console","error","onend","WebSocket","onopen","log","onmessage","data","JSON","parse","type","text","prev","e","onclose","close","sendMessage","message","trim","isUser","readyState","OPEN","send","toggleListening","stop","start","handleSendMessage","preventDefault","handleInputChange","target","value","className","children","style","display","alignItems","gap","src","alt","width","height","fileName","_jsxFileName","lineNumber","columnNumber","flexDirection","color","fontStyle","margin","marginTop","onSubmit","onChange","placeholder","whiteSpace","onClick","map","msg","idx","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/Tasya Wulandari/Downloads/ALL RESOURCES/capstone-ellc.v1/frontend/src/components/AgentChat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport '../styles/AgentChat.css';\r\n\r\nconst AgentChat = () => {\r\n  // States\r\n  const [input, setInput] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [showGif, setShowGif] = useState(false);\r\n  const [aiResponse, setAiResponse] = useState('');\r\n  const [grammarCorrection, setGrammarCorrection] = useState(null);\r\n\r\n  // Voice recognition states\r\n  const [transcript, setTranscript] = useState('');\r\n  const [isListening, setIsListening] = useState(false);\r\n  const recognition = useRef(null);\r\n\r\n  // WebSocket reference\r\n  const ws = useRef(null);\r\n\r\n  // Setup SpeechRecognition\r\n  useEffect(() => {\r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    if (!SpeechRecognition) {\r\n      alert('Browser kamu tidak mendukung Speech Recognition!');\r\n      return;\r\n    }\r\n    recognition.current = new SpeechRecognition();\r\n    recognition.current.continuous = true;\r\n    recognition.current.interimResults = true;\r\n    recognition.current.lang = 'en-US';\r\n\r\n    recognition.current.onresult = (event) => {\r\n      let interimTranscript = '';\r\n      let finalTranscript = '';\r\n      for (let i = event.resultIndex; i < event.results.length; i++) {\r\n        const textChunk = event.results[i][0].transcript;\r\n        if (event.results[i].isFinal) {\r\n          finalTranscript += textChunk;\r\n        } else {\r\n          interimTranscript += textChunk;\r\n        }\r\n      }\r\n      setTranscript(finalTranscript + interimTranscript);\r\n    };\r\n\r\n    recognition.current.onerror = (event) => {\r\n      console.error('Speech recognition error:', event.error);\r\n      setIsListening(false);\r\n    };\r\n\r\n    recognition.current.onend = () => {\r\n      setIsListening(false);\r\n    };\r\n  }, []);\r\n\r\n  // Setup WebSocket connection\r\n  useEffect(() => {\r\n  ws.current = new WebSocket('ws://localhost:8090');\r\n\r\n  ws.current.onopen = () => {\r\n    console.log('WebSocket connected');\r\n  };\r\n\r\n  ws.current.onmessage = (event) => {\r\n  try {\r\n    const data = JSON.parse(event.data); // coba parse sebagai JSON\r\n\r\n    if (data.type === 'grammar_correction') {\r\n      setGrammarCorrection(data.text);\r\n    } else {\r\n      // fallback untuk text biasa dari AI\r\n      setAiResponse(prev => prev + (data.text || ''));\r\n    }\r\n\r\n  } catch (e) {\r\n    // fallback untuk non-JSON (AI response string langsung dari stream)\r\n    if (event.data === '[END]') {\r\n      setShowGif(false);\r\n    } else {\r\n      setAiResponse(prev => prev + event.data);\r\n    }\r\n  }\r\n};\r\n\r\n\r\n  ws.current.onerror = (error) => {\r\n    console.error('WebSocket error:', error);\r\n    setShowGif(false);\r\n  };\r\n\r\n  ws.current.onclose = () => {\r\n    console.log('WebSocket disconnected');\r\n  };\r\n\r\n  // Cleanup on unmount\r\n  return () => {\r\n    ws.current.close();\r\n  };\r\n}, []);\r\n\r\n\r\n  // Send message to backend and update UI\r\n  const sendMessage = (message) => {\r\n  if (!message.trim()) return;\r\n\r\n  // Save user message in chat history\r\n  setMessages(prev => [...prev, { text: message.trim(), isUser: true }]);\r\n  \r\n  setGrammarCorrection(null); // Reset grammar correction setiap kirim pesan baru\r\n  setAiResponse('');          // Reset AI response\r\n  setShowGif(true);           // Show loading GIF\r\n\r\n  if (ws.current.readyState === WebSocket.OPEN) {\r\n    ws.current.send(message.trim());\r\n  } else {\r\n    console.error('WebSocket belum connected');\r\n    setShowGif(false);\r\n    setAiResponse('Error: Unable to connect to the server.');\r\n  }\r\n};\r\n\r\n\r\n  // Toggle voice recognition & send transcript when stopped\r\n  const toggleListening = () => {\r\n    if (isListening) {\r\n      recognition.current.stop();\r\n      setIsListening(false);\r\n\r\n      if (transcript.trim()) {\r\n        sendMessage(transcript);\r\n      }\r\n    } else {\r\n      setTranscript('');\r\n      recognition.current.start();\r\n      setIsListening(true);\r\n    }\r\n  };\r\n\r\n  // Handle input text send\r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (input.trim() === '') return;\r\n\r\n    sendMessage(input);\r\n    setInput('');\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"agent-chat-container\">\r\n\r\n      {/* Chat messages GIF + AI response */}\r\n      <div className=\"chat-messages\" style={{ display: 'flex', alignItems: 'center', gap: '15px' }}>\r\n        {showGif ? (\r\n          <>\r\n            <img\r\n              src=\"/voice_chatbot_talking_sharpened_fixed.gif\"\r\n              alt=\"Chatbot Talking\"\r\n              className=\"chatbot-gif\"\r\n              style={{ width: '500px', height: '300px' }}\r\n            />\r\n            <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\r\n              {/* Show grammar correction first */}\r\n              {grammarCorrection && (\r\n              <div className=\"grammar-correction\" style={{ color: 'orange', fontStyle: 'italic' }}>\r\n                Grammar correction: {grammarCorrection}\r\n              </div>\r\n            )}\r\n\r\n              {/* Then AI response streaming */}\r\n              <p className=\"chat-response-text\" style={{ margin: 0 }}>{aiResponse}</p>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <img\r\n              src=\"/assistant_idle.png\"\r\n              alt=\"AI Agent Idle\"\r\n              className=\"chatbot-gif\"\r\n              style={{ width: '500px', height: '300px' }}\r\n            />\r\n            {aiResponse && (\r\n              <div style={{ marginTop: '10px' }}>\r\n                {grammarCorrection && (\r\n                  <div className=\"grammar-correction\" style={{ color: 'orange', fontStyle: 'italic' }}>\r\n                    Grammar correction: {grammarCorrection}\r\n                  </div>\r\n                )}\r\n                <p className=\"chat-response-text\" style={{ margin: 0 }}>{aiResponse}</p>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      {/* Input ketikan */}\r\n      <div className=\"chat-input-area\">\r\n        <form onSubmit={handleSendMessage}>\r\n          <input\r\n            type=\"text\"\r\n            value={input}\r\n            onChange={handleInputChange}\r\n            placeholder=\"Type your message here...\"\r\n          />\r\n          <button type=\"submit\">Send</button>\r\n        </form>\r\n      </div>\r\n\r\n      {/* Voice recognition realtime output */}\r\n      <div className=\"voice-recognition-section\" style={{ marginTop: '20px' }}>\r\n        <p style={{ whiteSpace: 'pre-wrap' }}>\r\n          {transcript || \"This section and text will be shown result of user voice recognition\"}\r\n        </p>\r\n        <button onClick={toggleListening} className=\"voice-button\">\r\n          {isListening ? 'Stop Recording' : 'Start Recording'}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Chat history (optional) */}\r\n      <div className=\"chat-history\" style={{ marginTop: '30px' }}>\r\n        <h3>Chat History</h3>\r\n        {messages.length === 0 && <p>No messages yet.</p>}\r\n        <ul>\r\n          {messages.map((msg, idx) => (\r\n            <li key={idx} style={{ fontWeight: msg.isUser ? 'bold' : 'normal' }}>\r\n              {msg.isUser ? \"User:\" : \"AI:\"} {msg.text}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AgentChat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}