{"ast":null,"code":"var _jsxFileName = \"D:\\\\college\\\\capstone\\\\capstone-ellc\\\\frontend\\\\src\\\\pages\\\\QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Navigation from './Navigation';\nimport '../styles/QuizPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QuizPage = () => {\n  _s();\n  const {\n    level\n  } = useParams();\n  const navigate = useNavigate();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswers, setSelectedAnswers] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(null);\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await axios.get(`/api/quiz/${level}`);\n        setQuestions(response.data.questions);\n\n        // Initialize timer to 10 minutes (600 seconds) for all levels\n        const totalTime = 10 * 60; // 10 minutes = 600 seconds\n        setTimeLeft(totalTime);\n        setLoading(false);\n      } catch (err) {\n        if (err.response && err.response.status === 403) {\n          setError('This level is not unlocked yet. Please complete previous levels first.');\n        } else {\n          setError('Failed to load quiz. Please try again later.');\n        }\n        setLoading(false);\n        console.error('Error fetching quiz:', err);\n      }\n    };\n    fetchQuestions();\n  }, [level]);\n\n  // Timer countdown\n  useEffect(() => {\n    if (loading || timeLeft === null) return;\n    const timer = setInterval(() => {\n      setTimeLeft(prevTime => {\n        if (prevTime <= 1) {\n          clearInterval(timer);\n          handleSubmit();\n          return 0;\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [loading, timeLeft]);\n  const handleSelectAnswer = (questionId, option) => {\n    setSelectedAnswers({\n      ...selectedAnswers,\n      [questionId]: option\n    });\n  };\n  const handleQuestionClick = index => {\n    setCurrentQuestionIndex(index);\n  };\n  const handleSubmit = async () => {\n    // Prepare answers in the format expected by the API\n    const formattedAnswers = Object.keys(selectedAnswers).map(questionId => ({\n      question_id: parseInt(questionId),\n      selected_option: selectedAnswers[questionId]\n    }));\n    try {\n      const response = await axios.post(`/api/submit/${level}`, {\n        answers: formattedAnswers\n      });\n\n      // Navigate to result page with the result data\n      navigate(`/result/${level}`, {\n        state: {\n          result: response.data\n        }\n      });\n    } catch (err) {\n      setError('Failed to submit quiz. Please try again.');\n      console.error('Error submitting quiz:', err);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading quiz...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container error-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/'),\n          children: \"Return to Main Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  // If no questions found\n  if (questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"No questions available for this level\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/'),\n          children: \"Return to Main Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  const currentQuestion = questions[currentQuestionIndex];\n\n  // Format time left\n  const minutes = Math.floor(timeLeft / 60);\n  const seconds = timeLeft % 60;\n  const formattedTime = `${minutes < 10 ? '0' : ''}${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n\n  // Check if current question is answered\n  const isCurrentQuestionAnswered = selectedAnswers[currentQuestion.id] !== undefined;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: currentQuestion.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"options\",\n              children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `option ${selectedAnswers[currentQuestion.id] === option.charAt(0) ? 'selected' : ''}`,\n                onClick: () => handleSelectAnswer(currentQuestion.id, option.charAt(0)),\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"option-circle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 21\n                }, this), option]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"navigation-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setCurrentQuestionIndex(Math.max(0, currentQuestionIndex - 1)),\n              disabled: currentQuestionIndex === 0,\n              className: \"nav-button\",\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setCurrentQuestionIndex(Math.min(questions.length - 1, currentQuestionIndex + 1)),\n              disabled: currentQuestionIndex === questions.length - 1,\n              className: \"nav-button\",\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"level-star\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"star-container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"star-shape\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"level-text\",\n                  children: [\"LV\", level]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timer\",\n              children: formattedTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-grid\",\n            children: questions.map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `question-number ${index === currentQuestionIndex ? 'current' : ''} ${selectedAnswers[questions[index].id] !== undefined ? 'answered' : ''}`,\n              onClick: () => handleQuestionClick(index),\n              children: index + 1\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-button\",\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(QuizPage, \"mqBYjojr47Z41tcMfNJogQzfoqI=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","Navigation","jsxDEV","_jsxDEV","Fragment","_Fragment","QuizPage","_s","level","navigate","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswers","setSelectedAnswers","loading","setLoading","error","setError","timeLeft","setTimeLeft","fetchQuestions","response","get","data","totalTime","err","status","console","timer","setInterval","prevTime","clearInterval","handleSubmit","handleSelectAnswer","questionId","option","handleQuestionClick","index","formattedAnswers","Object","keys","map","question_id","parseInt","selected_option","post","answers","state","result","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","length","currentQuestion","minutes","Math","floor","seconds","formattedTime","isCurrentQuestionAnswered","id","undefined","question","options","charAt","max","disabled","min","_","_c","$RefreshReg$"],"sources":["D:/college/capstone/capstone-ellc/frontend/src/pages/QuizPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Navigation from './Navigation';\r\nimport '../styles/QuizPage.css';\r\n\r\nconst QuizPage = () => {\r\n  const { level } = useParams();\r\n  const navigate = useNavigate();\r\n  \r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [selectedAnswers, setSelectedAnswers] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchQuestions = async () => {\r\n      try {\r\n        const response = await axios.get(`/api/quiz/${level}`);\r\n        setQuestions(response.data.questions);\r\n        \r\n        // Initialize timer to 10 minutes (600 seconds) for all levels\r\n        const totalTime = 10 * 60; // 10 minutes = 600 seconds\r\n        setTimeLeft(totalTime);\r\n        \r\n        setLoading(false);\r\n      } catch (err) {\r\n        if (err.response && err.response.status === 403) {\r\n          setError('This level is not unlocked yet. Please complete previous levels first.');\r\n        } else {\r\n          setError('Failed to load quiz. Please try again later.');\r\n        }\r\n        setLoading(false);\r\n        console.error('Error fetching quiz:', err);\r\n      }\r\n    };\r\n\r\n    fetchQuestions();\r\n  }, [level]);\r\n\r\n  // Timer countdown\r\n  useEffect(() => {\r\n    if (loading || timeLeft === null) return;\r\n\r\n    const timer = setInterval(() => {\r\n      setTimeLeft((prevTime) => {\r\n        if (prevTime <= 1) {\r\n          clearInterval(timer);\r\n          handleSubmit();\r\n          return 0;\r\n        }\r\n        return prevTime - 1;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [loading, timeLeft]);\r\n\r\n  const handleSelectAnswer = (questionId, option) => {\r\n    setSelectedAnswers({ ...selectedAnswers, [questionId]: option });\r\n  };\r\n\r\n  const handleQuestionClick = (index) => {\r\n    setCurrentQuestionIndex(index);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    // Prepare answers in the format expected by the API\r\n    const formattedAnswers = Object.keys(selectedAnswers).map(questionId => ({\r\n      question_id: parseInt(questionId),\r\n      selected_option: selectedAnswers[questionId]\r\n    }));\r\n\r\n    try {\r\n      const response = await axios.post(`/api/submit/${level}`, {\r\n        answers: formattedAnswers\r\n      });\r\n      \r\n      // Navigate to result page with the result data\r\n      navigate(`/result/${level}`, { state: { result: response.data } });\r\n    } catch (err) {\r\n      setError('Failed to submit quiz. Please try again.');\r\n      console.error('Error submitting quiz:', err);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <>\r\n        <Navigation />\r\n        <div className=\"loading\">Loading quiz...</div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <>\r\n        <Navigation />\r\n        <div className=\"container error-container\">\r\n          <h2>Error</h2>\r\n          <p className=\"error\">{error}</p>\r\n          <button onClick={() => navigate('/')}>Return to Main Page</button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  // If no questions found\r\n  if (questions.length === 0) {\r\n    return (\r\n      <>\r\n        <Navigation />\r\n        <div className=\"container\">\r\n          <h2>No questions available for this level</h2>\r\n          <button onClick={() => navigate('/')}>Return to Main Page</button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  const currentQuestion = questions[currentQuestionIndex];\r\n\r\n  // Format time left\r\n  const minutes = Math.floor(timeLeft / 60);\r\n  const seconds = timeLeft % 60;\r\n  const formattedTime = `${minutes < 10 ? '0' : ''}${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\r\n\r\n  // Check if current question is answered\r\n  const isCurrentQuestionAnswered = selectedAnswers[currentQuestion.id] !== undefined;\r\n\r\n  return (\r\n    <>\r\n      <Navigation />\r\n      <div className=\"quiz-page\">\r\n        <div className=\"quiz-container\">\r\n          {/* Left column - Question and options */}\r\n          <div className=\"question-column\">\r\n            <div className=\"question-card\">\r\n              <h3>{currentQuestion.question}</h3>\r\n              \r\n              <div className=\"options\">\r\n                {currentQuestion.options.map((option, index) => (\r\n                  <div \r\n                    key={index} \r\n                    className={`option ${selectedAnswers[currentQuestion.id] === option.charAt(0) ? 'selected' : ''}`}\r\n                    onClick={() => handleSelectAnswer(currentQuestion.id, option.charAt(0))}\r\n                  >\r\n                    <span className=\"option-circle\"></span>\r\n                    {option}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"navigation-buttons\">\r\n              <button \r\n                onClick={() => setCurrentQuestionIndex(Math.max(0, currentQuestionIndex - 1))}\r\n                disabled={currentQuestionIndex === 0}\r\n                className=\"nav-button\"\r\n              >\r\n                Previous\r\n              </button>\r\n              \r\n              <button \r\n                onClick={() => setCurrentQuestionIndex(Math.min(questions.length - 1, currentQuestionIndex + 1))}\r\n                disabled={currentQuestionIndex === questions.length - 1}\r\n                className=\"nav-button\"\r\n              >\r\n                Next\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Right column - Level star, timer, question grid, submit */}\r\n          <div className=\"sidebar\">\r\n            {/* Level star with timer */}\r\n            <div className=\"level-star\">\r\n              <div className=\"star-container\">\r\n                <div className=\"star-shape\">\r\n                  <span className=\"level-text\">LV{level}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"timer\">{formattedTime}</div>\r\n            </div>\r\n\r\n            {/* Question grid */}\r\n            <div className=\"question-grid\">\r\n              {questions.map((_, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`question-number ${\r\n                    index === currentQuestionIndex ? 'current' : ''\r\n                  } ${\r\n                    selectedAnswers[questions[index].id] !== undefined ? 'answered' : ''\r\n                  }`}\r\n                  onClick={() => handleQuestionClick(index)}\r\n                >\r\n                  {index + 1}\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            {/* Submit button */}\r\n            <button \r\n              className=\"submit-button\"\r\n              onClick={handleSubmit}\r\n            >\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuizPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}